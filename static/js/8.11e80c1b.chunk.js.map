{"version":3,"file":"static/js/8.11e80c1b.chunk.js","mappings":"oNA0EA,UAlEe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,UAAGX,EAAaY,IAAI,gBAApB,QAAgC,IAE9CC,EAAAA,EAAAA,YAAU,WACS,KAAbF,IACJH,GAAW,GACXM,EAAAA,EAAAA,IAAA,0DAEuDH,GACnDI,EAAAA,GAEDC,MAAK,SAAAC,GAEJ,OADAT,GAAW,GACJF,EAASW,EAAKC,KAAKC,QAC3B,IACJ,GAAE,CAACR,IAYJ,OACE,iCACE,kBAAMS,SAZgB,SAAAC,GACxBA,EAAMC,iBACNrB,EAAgB,CAAEsB,MAAOpB,IAEzBC,EAAc,GACf,EAOG,WACE,kBAAOoB,KAAK,OAAOC,MAAOtB,EAAYuB,SANxB,SAAAL,GAClBjB,EAAciB,EAAMM,cAAcF,MACnC,KAKK,mBAAQD,KAAK,SAAb,SAAsB,eAExB,wBACGjB,GACC,SAAC,KAAD,CACEqB,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGM,IAAjB9B,EAAM+B,QACN/B,EAAMgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMjC,GAAlC,SACG8B,KAFID,EADD,QAWnB,C","sources":["page/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nimport { BallTriangle } from 'react-loader-spinner';\nimport { options } from 'helpers/options';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchName, setSearchName] = useState('');\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  //   console.log('location movies: ', location);\n  const filmName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (filmName === '') return;\n    setLoading(true);\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?query=${filmName}`,\n        options\n      )\n      .then(resp => {\n        setLoading(false);\n        return setFilms(resp.data.results);\n      });\n  }, [filmName]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchName });\n\n    setSearchName('');\n  };\n\n  const inputChange = event => {\n    setSearchName(event.currentTarget.value);\n  };\n  return (\n    <>\n      <form onSubmit={formSubmitHandler}>\n        <input type=\"text\" value={searchName} onChange={inputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {loading ? (\n          <BallTriangle\n            height={100}\n            width={100}\n            radius={5}\n            color=\"#4fa94d\"\n            ariaLabel=\"ball-triangle-loading\"\n            wrapperClass={{}}\n            wrapperStyle=\"\"\n            visible={true}\n          />\n        ) : (\n          films.length !== 0 &&\n          films.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n// (\n//           filmName === ' ' ||\n//           (films.length === 0 && (\n//             <h2>oops, there is not any films related to {filmName}</h2>\n//           ))\n//         )\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","searchName","setSearchName","films","setFilms","loading","setLoading","location","useLocation","filmName","get","useEffect","axios","options","then","resp","data","results","onSubmit","event","preventDefault","query","type","value","onChange","currentTarget","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","length","map","id","title","to","state","from"],"sourceRoot":""}