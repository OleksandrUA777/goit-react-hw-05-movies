{"version":3,"file":"static/js/8.e01d73db.chunk.js","mappings":"2MA0DA,UApDe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,UAAGX,EAAaY,IAAI,gBAApB,QAAgC,IAE9CC,EAAAA,EAAAA,YAAU,WACS,KAAbF,IACJH,GAAW,IACXM,EAAAA,EAAAA,IAAYH,GAAUI,MAAK,SAAAC,GAEzB,OADAR,GAAW,GACJF,EAASU,EAAKC,QACtB,IACF,GAAE,CAACN,IAYJ,OACE,iCACE,kBAAMO,SAZgB,SAAAC,GACxBA,EAAMC,iBACNnB,EAAgB,CAAEoB,MAAOlB,IAEzBC,EAAc,GACf,EAOG,WACE,kBAAOkB,KAAK,OAAOC,MAAOpB,EAAYqB,SANxB,SAAAL,GAClBf,EAAce,EAAMM,cAAcF,MACnC,KAKK,mBAAQD,KAAK,SAAb,SAAsB,eAExB,wBACGf,GACC,SAAC,KAAD,IAEiB,IAAjBF,EAAMqB,QACNrB,EAAMsB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMvB,GAAlC,SACGoB,KAFID,EADD,QAWnB,C","sources":["page/Movies.jsx"],"sourcesContent":["import { BallTriangle } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'helpers/fetch-api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchName, setSearchName] = useState('');\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  //   console.log('location movies: ', location);\n  const filmName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (filmName === '') return;\n    setLoading(true);\n    fetchSearch(filmName).then(resp => {\n      setLoading(false);\n      return setFilms(resp.results);\n    });\n  }, [filmName]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchName });\n\n    setSearchName('');\n  };\n\n  const inputChange = event => {\n    setSearchName(event.currentTarget.value);\n  };\n  return (\n    <>\n      <form onSubmit={formSubmitHandler}>\n        <input type=\"text\" value={searchName} onChange={inputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {loading ? (\n          <BallTriangle />\n        ) : (\n          films.length !== 0 &&\n          films.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n// (\n//           filmName === ' ' ||\n//           (films.length === 0 && (\n//             <h2>oops, there is not any films related to {filmName}</h2>\n//           ))\n//         )\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","searchName","setSearchName","films","setFilms","loading","setLoading","location","useLocation","filmName","get","useEffect","fetchSearch","then","resp","results","onSubmit","event","preventDefault","query","type","value","onChange","currentTarget","length","map","id","title","to","state","from"],"sourceRoot":""}